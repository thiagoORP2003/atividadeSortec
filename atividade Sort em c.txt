
 exerc√≠cio 1


#include <stdio.h>
#include <stdlib.h>

void insertionSort (int v[200], int n)
{
    int i, j, x;
    for(i = 1; i < n; i++) {
        x = v[i];
        j = i - 1;
        while (j >= 0 && v [j] > x) {
            v[j+1] = v[j];
            j--;
    }
    v[j+1] = x;
    }
}

int main()
{
    int v[200], n, i;
    printf("Entre tamanho desejado do vetor: ");
    scanf("%d", &n);
    printf("Entre os %d elementos do vetor:\n", n);
    for(i = 0; i< n; i++) {
        scanf("%d", &v[i]);
    }
    
    insertionSort(v, n);
    printf("\n\nVetor ordenado: \n");
    for(i = 0; i < n; i++) {
        printf("%d\t", v[i]);
    }
    printf("\n");
    return 0;
}


exercicio 2

#include <stdio.h>
#include <stdlib.h>

void insertionSort (int v[200], int n)
{
    int i, j, aux, min;
    for(i = 0; i < n-1; i++) {
        min = i;
        j = i - 1;
        for (j = i+1; j < n; j++) {
            if (v[j] < v [min]) {
         min= j;
        }
      } 
    aux = v[i]; v[i] = v[min]; v[min] = aux; //troca
    }
}

int main()
{
    int v[200], n, i;
    printf("Entre tamanho desejado do vetor: ");
    scanf("%d", &n);
    printf("Entre os %d elementos do vetor:\n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &v[i]);
    }
    insertionSort (v, n);
    printf("\nVetor ordenado:\n");
    for(i = 0; i < n; i++) {
        printf("%d\t", v[i]);
    }
    printf("\n");
    return 0;
}


 exercicio 3

#include <stdio.h>
#include <stdlib.h>

void bubbleSort (int v[200], int n)
{
    int i, j, aux;
    for(i = n-1; i > 0; i--) {
        for(j = 0; j < i; j++) {
            if(v[j] > v[j+1]) {
                aux = v[j]; v[j] = v[j+1]; v[j+1] = aux; //troca
            }
        }
    }
}

int main()
{
    int v[200], n, i;
    printf("Entre tamanho desejado do vetor: ");
    scanf("%d", &n);
    printf("Entre os %d elementos do vetor:\n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &v[i]);
    }
    bubbleSort (v, n);
    printf("\nVetor ordenado:\n");
    for(i = 0; i < n; i++) {
        printf("%d\t", v[i]);
    }
    printf("\n");
    return 0;
}